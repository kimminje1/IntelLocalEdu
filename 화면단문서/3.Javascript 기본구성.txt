3.Javascript 기본구성.txt




자바랑 왠만한건 동일하다

규칙:스크립트라고 하면 일단 자바스크립트라고 생각하자~

*스크립트 선언 위치
html태그 안이라면 아무곳이나 가능하다

head 태그 내에 위치할 수 있다
/body 뒤에 위치할 수 있다

하지만 head가 일단 기본이다

*변수와 상수
var			최초의 변수타입
let			ECMA 6에서 도입
const	    ECMA 6에서 도입
		
ECMA6에서 변수의 유효 범위가 이전보다 명확해졌습니다.	

*자바스크립트 특징
인터프리터 언어이다-한줄한줄씩 읽어가며 명령을 바로 처리하는 언어
객체기반 언어이다-프로토타입 기반의 프로그래밍 언어

객체지향 					vs			객체기반
비객체지향 프로그램을 짤 수 있다             객체 프로그램
기본 타입존재 							기본 타입 x->전부 객체 O
		
		
*명명 규칙
카멜: 자바 언어- 첫번째 단어 소문자 두번째 단어이후부터 첫문자만 대문자
파스칼: 클래스 각 글자 첫글자 대문자로
언더스코어 화면단,CSS, DB->각 단어를 언더바로		

*변수의 라이프사이클
var/let 없이 선언하면 static변수로 작동한다
함수내의 변수는 함수호출후에 지정된다



*let
동일한 변수를 중복해서 선언할 수 없다
블록에서 전역변수처럼 사용할 수없다
변수값을 변경할 수 있다


**const -명명규칙-모두대문자로~
상수 선언
var, let은 변경되는 데이터를 선언하는 반면
상수(const)는 변경하지 않을 데이터를 선언한다
나머지는 let의 특징을 가지고 있다.


*DOM(Document Object Model) 421p 시험문제
문서 객체 모델
웹 페이지의 구조는 html이 모든 태그들을 감싸고 있으며,
그 내부는 다시 각종 설정과 선언으로 이뤄진, head 태그와
body태그로 나누어 진다

모든 웹 문서는 여러 태그들이 각각 역할에 따라 구조화되어 있다
태그들 각각을 객체로 인식하는 개념

-id선택자
-class선택자
-tag선택자
create read update delete
*DOM CRUD
태그 관리(manage)

createElement 		태그를 생성하는 메서드
createTextNode 		텍스트를 생성하는 메서드
appendChild 		태그를 부모와 자식의 관계로 만들어주는 메서드
					부모 태그.appendChild(자식태그)
					
removeChild 		태그를 제거해 주는 메서드
					부모.removeChildd(자식) -> 자식만 지워진다

insertBefore		태그에 새로운 자식을 추가
					부모태그.insertBefore(새로운 자식, 선택 태그 자식)
					선택태그 자식 앞에  새로운 자식태그를 추가
					
replaceChild		부모 태그의 자식인 선택태그를 새 자식 태그로 덮어 씌움
					부모.replaceChild(새 태그, 선택태그)

cloneNode			선택태그.cloneNode(true or false)
					선택태그를 복제하여 true인 경우에는 하위태그 까지 모두 복제

					
					
getAttribute			 
setAttribute
removeAttribute
					

이벤트 사건발생

*자바스크립트 함수명 명명규칙
자바랑 동일한데
함수명 끝은 fnc를 붙인다
ex: testFnc();


내장 함수? 과거에 쓰던 표현
기본 함수 표현 			vs 		사용자 정의 함수
이미 제공 되는 것				기본이 아닌 것?/내가 만든 것
기본함수 isNaN/paresint/number 기억할것

*toggle 토글

토글이란? on/ off 처럼 두 상태중 하나를 선택하여 사용하는 키를 말합니다. 
쉽게 말하면 켰다 껐다 하는 것 입니다.

*이벤트 event
onclick = 함수명대신 
표준 이벤트 방식인 addEventListener를 사용하자

*표현식(expression)
적용할 태그.addEventListener(이벤트명type, 적용할 함수function(e) {},이벤트 작동원리 설정 capture)
세번째 없어도됨

*표준 이벤트 등록 방법
진행방식
버블업 방식?

이벤트 작동 원리 설정에 들어갈 수 있는 값: true, false

false가 되면 해당 이벤트가 발생한 위치에서 멈추고 아래로 진행되는데
이를 버블업 방식이라 부른다

자식누를때 부모도 이벤트발생함

*이벤트 객체
이벤트 객체는 기본 객체처럼 자바스크립트에서 기본적으로 제공해주는 객체이다

이벤트 객체를 이용하면 마우스를 클릭했을 때 클릭한 좌표 값이라든지 이벤트를 발생시킨
객체가 어떤 것인지 등에 대한 정보 값을 쉽게 얻을 수 있다

이벤트 핸들러가 구동될 때 생성되는 객체로서 '클릭'이나 '키보드 입력'등의 동작 자체를
의미한다
특정 이벤트 핸들러를 구동하면, 함수의 매개변수에 이벤트 객체가 자동으로 생성된다
단, 이는 사용자의 브라우저가 W3C의 표준안을 따르는 브라우저일 경우에 한합니다.
즉, 비표준 방식의 브라우저를 사용 중 이라면
이벤트 핸들러를 구동하는 것만으로 매개변수에 이벤트 객체를 자동 생성할 수 없다

익명 함수의 매개변수 event가 이벤트 객체를 의미한다.
변수명을 반드시 event로 사용할 필요는 없으나, 보통 이벤트 객체의 의미로
event or e 변수명으로 많이 사용한다

*브라우제 객체(BOM)
Browser Object Model
브라우저 객체 모델이란 브라우저 창에 포함된 모든 객체 요소들을 의미한다
브라우저에는 URL주소에 대한 정보를 제공하는 location객체, 현재 실행 중인
브라우저에 대한 정보를 제공하는 navigator, 브라우저의 방문 기록에 대한 정보를
제공하는 history 객체 등이 있다

**window 객체**
브라우저라는 것도 결국 창(window) 안에서 실행되는 프로그램이므로,
위의 모든 개별 객체들은 최상위 객체인 window 아래에 존재한다.

모든 객체의 최상위 객체이며, 새 창을 생성하는 역할 등을 한다.

*location
웹 브라우저의 주소(URL) 관련 정보를 다루는 객체이다

*navigator
브라우저에 대한 정보를 제공하는 객체

*CDATA(Unparsed Character Data)
자바스크립트가 만들어진 초창기에 웹브라우저가 자바스크립트로 인식하지 못하고 html로 인식하여
 인터프리팅 하는 것을 방지하기 위해서였습니다.
 html 주석으로 감싸 스크립트 부분을 주석으로 인식하게 하는 것
 
 Document <Window < Object
 window.document 묵시적으로존재 