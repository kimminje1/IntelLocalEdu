	JVM 메모리 구조.
	
	1.스태틱 영역(static area)//안사라짐,비휘발성
	프로그램 실행 중 어떤 클래스가 사용되면, JVM은 해당 클래스의 클래스파일(*,class)을
	읽어서 분석하여 클래스에 대한 정보(클래스 데이터)를 이곳에 저장한다
	이 떄 그 클래스의 static 변수도 이 영역에 함께 생성된다.
	
	2.힙(Heap)//반휘발성
	인스턴스가 생성되는 공간. 프로그램 실행 중 생성되는 인스턴스는 모두 이곳에 생성된다
	즉, 인스턴스 변수(instance variable)들이 생성되는 공간이다
	
	3.스택(stack)//휘발성
	스택은 메서드의 작업에 필요한 메모리 공간을 제공한다. 메서드가 호출되면
	호출스택에 호출된 메서드를 위한 메모리가 할당되며, 이 메모리는 메서드가 작업을
	수행하는 동안 지역변수(매개변수 포함)들과 연산의 중간결돠 등을 저장하는데 사용된다.
	그리고 메서드가 작업을 마치면 할당되었던 메모리 공간은 반한되어 비워진다.
	
	각 메서드를 위한 메모리상의 작업공간은 서로 구별되며,
	첫 번째로 호출된 메서드를 위한 작업공간이 호출스택의 맨 밑에 마련되고,
	첫 번째 메서드 수행 중에 다른 메서드를 호출하게 되면, 그 위에 두 번째로
	호출된 메서드를 위한 공간이 마련된다.
	//먼저 들어간건 마지막으로나간다(쌓는거생각하면됨)
	메서드가 수행을 마치고 나면 사용했던 메모리를 반환하고 스택에서 제거된다.
