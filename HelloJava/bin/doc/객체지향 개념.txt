객체지향 개념.txt

*객체지향이론의 기본 개념
실제 세계는 사물(객체)로 이루어져 있으며, 발생하는 모든 사건들은
사물간의 상호작용이다

실제 사물의 속성과 기능을 분석한 다음, 
데이터(변수)와 함수로 정의함으로써 실제 세계를 컴퓨터 속에 옮겨 놓은 것과
같은 가상세계를 구현하고 이 가상세계에서 모의실험을 함으로써 많은 시간과
비용을 절약할 수 있었다

*객체지향의 주요 특징
1.코드의 재사용성이 높다
	새로운 코드를 작성할 때 기존의 코드를 이용하여 쉽게 작성할 수 있다
2.코드의 관리가 용이하다
	코드간의 관계를 이용해서 적은 노력으로 쉽게 코드를 변경할 수 있다
3.신뢰성이 높은 프로그래밍을 가능하게 한다
	제어자와 메서드를 이용해서 데이터를 보호하고 올바른 값을 유지하도록 하며,
	코드의 중복을 제거하여 코드의 불일치로 인한 오동작을 방지할 수 있다

**코드 작성 방법**
너무 객체지향에 고민하기 보다는 일단 기능적으로 완성해 보면서
어떻게 하면 보다 객체지향적으로 코드를 개선할 수 있을까를 고민하여
점차 코드를 개선해 나가는 것이 좋다


*클래스(Class)와 객체(Object, Instance)

클래스란
클래스의 정의: 객체를 정의해놓은 것
객체의 설계도 또는 틀

클래스의 용도: 객체를 생성하는데 사용된다

객체의 정의: 실제로 존재하는 것, 사물 또는 개념
객체의 용도: 객체가 가지고 있는 기능과 속성에 따라 다름

유형의 객체 - 책상, 의자, 자동차, TV와 같은 사물
무형의 객체 - 수학공식, 프로그램 에러, 시간 같은 논리나 개념

EX:
클래스		객체
제품설계도		제품
TV설계도		TV
붕어빵 틀		붕어빵

객체와 인스턴스
클래스로부터 객체를 만드는 과정을 클래스의 인스턴스화라고 하며
어떤 클래스로부터 만들어진 객체를 그 클래스의 인스턴스(instance)라고 한다

*객체의 구성요소 - 속성과 기능
TV의 속성 : 크기, 길이, 높이, 색상, 볼륨, 채널등
Tv의 기능 : 켜기, 끄기, 볼륨 높이기, 볼륨 낮추기, 채녈 변경하기 등

속성(property) - 멤버(member) 변수, 특성(attribute), 필드 등
기능(function) - 메서드(method), 함수, 행위


클래스 -사용자 정의 타입(user-defined type)
모든 것을 미리 누군가 만들어 줄 수 없다
기본적인 것들만 미리 예측해 만들어주고
개인적으로 자신에게 맞는 것이 필요하다면
스스로 타입을 만들어서 사용해라고 제공해 준 것이
사용자 정의 타입 즉, 클래스이다









