변수와 메서드.txt


선언위치에 따른 변수의 종류
변수는 클래스 변수, 인스턴스 변수, 지역변수 모두 세 종류가 있다.
변수의 종류를 결정짓는 요소는 '변수의 선언된 위치'이므로 변수의
종류를 파악하기 위해서는 변수가 어느 영역에 선언되었는지를 확인하는 것이
중요하다

public class Basic { //클래스 영역
	
	int iv;			//인스턴스 변수
	static int cv;	//static 변수(공유 변수)
	
	void method();{	//매서드 영역
		int lv=0;	//지역 변수
	}
}

==========================================================================
변수의 종류		    선언위치						생성시기
static variable	   	클래스 영역					클래스가 메모리에 올라갈 때
instance variable   ""							인스턴스가 생성되었을 때 
local variable		클래스 영역 이외의 영역			변수 선언문이 수행되었을 때
					(매서드, 생성자, 블럭내부)
==========================================================================

1.인스턴스 변수
클래스 영역에 선언되며, 클래스의 인스턴스를 생성할 때 만들어진다
인스턴스는 독립적인 저장공간을 가지므로 서로 다른 값을 가질 수 있다

2.스태틱 변수
인스턴스 변수 앞에 static을 붙이기만 하면 스태틱 변수를 선언할 수 잇다.
스태틱 변수는 모든 인스턴스가 공통된 저장공간을 공유하게 된다
한 클래스의 모든 인스턴들이 공통적인 값을 유지해야 하는 속성인 경우 
스태틱 변수로 선언해야 한다
클래스가 메모리에 로딩될 때 생성되어 프로그램이 종료될 때 까지 유지되며
프로그램 내에서 어디서나 접근할 수 있는 전역변수가 될 수도 있다.
(단 접근 제어자 public인 경우)

3.지역 변수
메서드 내에 선언되어 메서드 내에서만 사용 가능하며, 메서드가 종료되면 
소멸되어 사용할 수 없게 된다. for문 또는 while문의 블럭({})내에 
선언된 지역변수는 지역 변수가 선언된 블럭({})내에서만 사용 가능하며
블럭을 벗어나면 소멸되어 사용할 수 없게 된다.
지금까지 우리가 5장까지 선언한 변수는 모두 지역변수이다.





*메서드(method)
특정 작업을 수행하는 일련의 문장들을 하나로 묶은 것이다

수학의 함수와 비슷하다.

메서드가 작업을 수행하는데 필요한 값만 넣고 원하는 결과를 얻으면 될 뿐
이 메서드가 내부적으로 어떤 과정을 거쳐 결과를 만들어내는지에 대해서는
전혀 몰라도 된다.
단순히 넣을(입력) 값과 반환하는 결과(출력)만 알면 되는 것이다.

메서드를 사용하는 이유
1.높은 재사용성
2.중복된 코드의 제거(일관성 제공) 
3.프로그램의 구조화
