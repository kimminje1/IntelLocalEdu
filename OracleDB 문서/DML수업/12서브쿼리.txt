0617
12서브쿼리.txt



서브쿼리(Subquery)란

하나의 sql문 안에 포함되어 있는 또 다른 sql문을 말한다

메인 쿼리와 서브 쿼리를 포함하는 종속적인 관계이다

*조인 vs 서브쿼리
조인은 조인에 참여하는 모든 테이블이 대등한 관계에 있기 때문에 조인에 참여하는
모든 테이블의 컬럼을 어느 위치에라도 자유롭게 사용할 수 있다

서브쿼리는 메인쿼리의 컬럼을 모두 사용할 수 있지만
메인쿼리는 서브쿼리의 컬럼을 사용할 수 없다 

질의 결과에 컬럼을 표시해야 한다면 조인 방식으로 작성하거나 
스칼라 서브쿼리(scalar subquery) 등의 사용해야 한다


*서브쿼리 사용시 주의사항
-서브쿼리를 괄호로 감싸서 사용한다
-서브쿼리는 단일 행(single row) 또는 복수행(multiple row)비교 연산자와 함께
사용 가능하다. 단일행 비교 연산자는 서브쿼리의 결과가 반드시 1건 이하이어야 하고
복수 행 비교 연산자는 서브쿼리의 결과 건수와 상관없다
-서브쿼리에서는 order by절을 사용하지 못한다. order by절은
select절에서 오직 한개만 올수 있기 때문에 order by절은
메인 쿼리의 마지막 문장에 위치해야 한다

*서브쿼리 사용 가능 위치
select, from, where , having , order by
, insert문의 valuse절
, update문의 set절

*서브쿼리 종류 				설명	
비연관 서브쿼리 			서브쿼리가 메인쿼리 컬럼을 가지고 있지 않은 형태의 서브쿼리이다
						메인쿼리에 값(서브쿼리가 실행된 결과를) 제공하기 위한 목적으로
						주로 사용한다
연관 서브쿼리				서브쿼리가 메인쿼리 컬럼을 가지고 있는 형태의 서브쿼리이다
						일반적으로 메인쿼리가 먼저 수행되어 읽혀진 데이터를 서브쿼리에서
						조건이 맞는지 확인하고자 할 때 주로 사용된다
						
단행행 서브쿼리에서 사용되는 연산자:
=,<,<=,<> 등과 같은 비교 연산자


다중행 서브쿼리에서 사용되는 연산자:
in, all, any등이 있다

다중 컬럼 서브쿼리:
서브쿼리와 메인쿼리에서 비교하고자 하는 컬럼 개수와 컬럼의 위치가 동일해야 한다

*단일행 서브쿼리 표현식
select 컬럼명1
from table 1
where 컬럼명= (select 컬럼명1
			  from talbe2);

*다중행 서브쿼리
IN: 메인 쿼리의 비교조건이 서브쿼리의 결과 중에서 하나라도 일치하면 참입니다
ANY, SOME(ANY와 동일함):메인 쿼리의 비교조건이 서브쿼리의 검색 결과와 하나 이상이 일치하면 참입니다
ALL:메인 쿼리의 비교조건이 서브쿼리의 검색결과와 모든 값이 일치하면 참입니다

EXIST: 메인 쿼리의 비교 조건이 서브쿼리의 결과중에서 만족하는 값이 하나라도 존재하면 참입니다.

0618
연관 서브쿼리
서브쿼리 내에 메인쿼리 컬럼이 사용된 서브쿼리이다

exists 서브쿼리는 항상 연관 서브쿼리로 사용된다
EXISTS 서브쿼리의 특징은 아무리 조건을 만족하는 건이 여러 건이더라도
조건을 만족하는 1건만 찾으면 추가적인 검색을 진행하지 않는다

*스칼라 서브쿼리
SELECT절에 서브쿼리 사용하기	

스칼라 서브쿼리는 한 행, 한 컬럼만을 반환하는 서브쿼리를 말한다

컬럼명을 작성할 수 있는 곳이라면 대부분 사용가능하다

연관서브쿼리는 강력하다, 다만 수행비용이 크다

*FROM절에서 서브쿼리 사용하기
INLINE VIEW
FROM 절에서 사용되는 서브쿼리를 인라인 뷰라고 한다.
FROM 절에는 테이블명이 오도록 되어있다.
서브쿼리의 결과가 마치 실행 시에 동적으로 생성된 테이블인 것처럼 사용할 수 있다
인라인 뷰는 SQL문이 실행될 때만 임시적으로 생성되는 동적인 뷰이기 때문에
데이터베이스에 해당 정보가 저장되지 않는다
그래서 일반적인 뷰를 정적 뷰(static view)라고 하고
인라인 뷰를 동적 뷰(Dynamic View)라고 한다
인라인 뷰는 테이블 명이 올 수 있는 곳에서 사용할 수 있다

서브쿼리의 컬럼은 메인쿼리에서 사용할 수 없다
하지만 인라인 뷰는 동적으로 생성된 테이블이다
인라인 뷰를 사용하는 것은 조인 방식을 사용하는 것과 같다

Pesudo Column(수도 컬럼)-가상컬럼이라고 부름
*ROWNUM? --오라클에만있다
oracle의 rownum은 컬럼과 비슷한 성격의 Pesudo Column으로써
sql처리 결과 집합의 각 행에 대한 임시로 부여되는 일련번호이며,
테이블이나 집합에서 원하는 만큼의 행만 가져오고 싶을 때
where 절에서 행의 개수를 제한하는 목적으로 사용한다

ex:
--1건
select player_name
from player
where rownum =1;
--3건
select player_name
from player
where rownum <=3;


